[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "script_to_speech"
version = "1.1.0"
description = "A set of tools to convert screenplays into multi-voiced audiobooks using various TTS providers"
authors = [
    {name = "Trent Walkiewicz", email = "t.walkiewicz@gmail.com"}
]
license = "MIT"
requires-python = ">=3.10"
dependencies = [
    "elevenlabs>=1.57.0",
    "pydub>=0.25.1",
    "pdfplumber>=0.10.3",
    "PyYAML>=6.0.1",
    "python-dotenv>=1.0.0",
    "ruamel.yaml>=0.17.21",
    "unidecode>=1.4.0",
    "openai>=1.76.0",
    "zyphra>=0.1.6",
    "eyeD3>=0.9.7",
    "tqdm>=4.67.1",
    "static-ffmpeg>=2.5",
    "cartesia>=2.0.3",
    "requests>=2.32.0",
    "pyperclip>=1.8.2",
    "pathvalidate>=3.0.0",
    "audioop-lts>=0.2.1 ; python_full_version >= '3.13'",
]

[project.optional-dependencies]
gui = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
]
build = [
    "pyinstaller>=6.0.0",
]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "mypy>=1.10.0",  # Aligned with pre-commit and latest stable
    "types-pyYAML>=6.0.12",
    "types-requests>=2.32.0",
    "types-tqdm>=4.67.0",
]

[project.scripts]
sts-generate-audio = "script_to_speech.script_to_speech:main"
sts-generate-standalone-speech = "script_to_speech.utils.generate_standalone_speech:main" 
sts-batch-generate-standalone-speech = "script_to_speech.utils.batch_standalone_speech_generator:main"
sts-tts-provider-yaml = "script_to_speech.tts_providers.utils:main"
sts-analyze-json = "script_to_speech.parser.analyze:main"
sts-apply-text-processors-json = "script_to_speech.parser.apply_text_processors:main"
sts-parse-screenplay = "script_to_speech.parser.process:main"
sts-parse-regression-check-json = "script_to_speech.parser.regression_check:main"
sts-generate-character-notes-prompt = "script_to_speech.voice_casting.character_notes_cli:main"
sts-generate-voice-library-casting-prompt = "script_to_speech.voice_casting.voice_library_casting_cli:main"
sts-copy-to-clipboard = "script_to_speech.utils.clipboard_cli:main"
sts-validate-voice-library-data = "script_to_speech.voice_library.cli_data:main"
sts-validate-voice-library-config = "script_to_speech.voice_library.cli_config:main"
sts-voice-library-run-script = "script_to_speech.voice_library.cli_run_script:main"
sts-validate-voice-library-scripts = "script_to_speech.voice_library.cli_validate_scripts:main"
sts-gui-server = "script_to_speech.gui_backend.main:main"


[tool.hatch.build.targets.wheel]
packages = ["src/script_to_speech"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
]

[tool.hatch.build.targets.wheel.force-include]
"src/script_to_speech/dummy_tts_backend/assets/" = "script_to_speech/dummy_tts_backend/assets/"
"src/script_to_speech/text_processors/configs/" = "script_to_speech/text_processors/configs/"
"src/script_to_speech/voice_library/voice_library_data/" = "script_to_speech/voice_library/voice_library_data/"


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: marks a test as a unit test",
    "integration: marks tests that require integration with other modules",
    "slow: marks tests that run slowly",
]
addopts = "--verbosity=2 --showlocals"
filterwarnings = [
    # Ignore the ffmpeg/avconv warning from pydub
    "ignore::RuntimeWarning:pydub.utils:",
]

[tool.black]
line-length = 88
exclude = '''
/(
    ffmpeg
    | input
    | output
    | __pycache__
    | source_screenplays
    | standalone_speech
    | venv
)/.*
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
skip = ["ffmpeg", "input", "output", "__pycache__", "source_screenplays", "standalone_speech", "venv"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true
explicit_package_bases = true
mypy_path = "src"

# Exclude directories
exclude = "/(ffmpeg|input|output|__pycache__|source_screenplays|standalone_speech|venv)/.*"

# Ignore errors in tests for now
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

# Third-party libraries without stubs
[[tool.mypy.overrides]]
module = ["pydub.*", "ruamel.*", "elevenlabs.*", "eyed3.*", "zyphra.*", "pdfplumber.*", "unidecode.*", "openai.*", "static_ffmpeg.*", "cartesia.*", "requests.*", "dotenv.*", "pyperclip.*", "pydantic.*", "pydantic_settings.*", "fastapi.*", "uvicorn.*", "pathvalidate.*"]
ignore_missing_imports = true
